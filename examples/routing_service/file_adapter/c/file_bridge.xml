<?xml version="1.0"?>
<!--
 (c) 2021 Copyright, Real-Time Innovations, Inc.  All rights reserved.
 RTI grants Licensee a license to use, modify, compile, and create derivative
 works of the Software.  Licensee has the right to distribute object form only
 for use with RTI products.  The Software is provided "as is", with no warranty
 of any type, including any warranty for fitness for any purpose. RTI is under
 no obligation to maintain or support the Software.  RTI shall not be liable for
 any incidental or consequential damages arising out of the use or inability to
 use the software.
 -->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/7.0.0/rti_routing_service.xsd">
    <!-- Make sure this path is correctly set into your system, otherwise it
       wouldn't affect the execution, but autocompletion wouldn't work -->

    <!-- Adapter entry points are defined here -->
    <adapter_library name="AdapterLib">
        <adapter_plugin name="FileAdapter">
            <dll>FileAdapterC</dll>
            <create_function>RTI_RoutingServiceFileAdapterPlugin_create</create_function>
        </adapter_plugin>
    </adapter_library>

    <!-- ****************************************************************** -->
    <!-- ****************************************************************** -->

    <routing_service name="FileAdapterToFileAdapter">
        <annotation>
            <documentation>
                This application scans one folder in the file system,
                and for every new file discovered, creates a stream and copies
                the content of the file to the other connection
            </documentation>
        </annotation>

        <domain_route name="FileBridge">

            <connection name="FileConnectionInput" plugin_name="AdapterLib::FileAdapter">
                <property>
                    <value>
                        <!-- Path to the directory where the files to read/write are-->
                        <element>
                            <!-- This is the path of the input directory, the directory that will
                                        be scanned to check for file present to copy to the other side -->
                            <name>example.adapter.folder_path</name>
                            <value>$(INPUT_DIRECTORY)</value>
                        </element>
                        <!-- This property specifies how often you are going to check
                                    inside the input folder if there are new files -->
                        <element>
                            <name>example.adapter.discovery_sleep_period</name>
                            <value>5</value>
                        </element>

                        <!-- Whether the connection is going to be used as "Input" or "Output".
                                Usually, the same connection can be used to read and write from/to
                                a data domain. In this case, we have a dedicated connection for each
                                since we specify one directory for input and another for output-->
                        <element>
                            <!-- This property it is to indicate whether the
                                        connection is used as input or output connection -->
                            <name>example.adapter.direction</name>
                            <value>Input</value>
                        </element>
                    </value>
                </property>
            </connection>
            <connection name="FileConnectionOutput" plugin_name="AdapterLib::FileAdapter">
                <property>
                    <value>
                        <element>
                            <!-- This is the path of the output directory, where the discovered
                                        files will be copied -->
                            <name>example.adapter.folder_path</name>
                            <value>$(OUTPUT_DIRECTORY)</value>
                        </element>
                        <element>
                            <name>example.adapter.direction</name>
                            <value>Output</value>
                        </element>
                    </value>
                </property>
            </connection>

            <session name="FileToFileSession">
                <auto_route name="AllInputToOutput">
                    <input connection="FileConnectionInput">
                        <creation_mode>ON_DOMAIN_MATCH</creation_mode>
                        <property>
                            <value>
                                <!-- How often we read samples from the file (ms) -->
                                <element>
                                    <name>example.adapter.read_period</name>
                                    <value>1000</value>
                                </element>
                                <!-- How many samples we will take from the file every read_period -->
                                <element>
                                    <name>example.adapter.samples_per_read</name>
                                    <value>1</value>
                                </element>
                            </value>
                        </property>
                    </input>

                    <output connection="FileConnectionOutput">
                        <creation_mode>ON_ROUTE_MATCH</creation_mode>
                        <property>
                            <value>
                                <!-- The write mode can be:
                                        - overwrite (write in the file deleting previous content)
                                        - append (write at then end of the file)
                                        - keep (fail if the file already exists and don't modify it)
                                -->
                                <element>
                                    <name>example.adapter.write_mode</name>
                                    <value>overwrite</value>
                                </element>
                                <!-- Whether to flush the file after every sample is written. -->
                                <element>
                                    <name>example.adapter.flush</name>
                                    <value>1</value>
                                </element>
                            </value>
                        </property>
                    </output>

                </auto_route>
            </session>
        </domain_route>
    </routing_service>
</dds>