<?xml version="1.0"?>
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="https://community.rti.com/schema/7.0.0/rti_routing_service.xsd">


    <plugin_library name="AdapterLib">
        <adapter_plugin name="FileAdapter">
            <!--
            By specifing this value, RTI Router will search for
            libfileadapter.so in Unix systems, fileadapter.dll on
            Windows systems and libfileadapter.dylib on Mac OS.
            RTI Routing Service will attempt to load this library from:
                - Working directory or plugin_search_path
                - Executable directory
                - Environment library path
            -->
            <dll>FileAdapterC++11</dll>
            <create_function>FileAdapter_create_adapter_plugin</create_function>
        </adapter_plugin>
    </plugin_library>

    <!-- Demonstrates a scenario where the FileAdapter reads from a file and writes
            back the same data to a new file -->
    <routing_service name="FileAdapterToFileAdapter">
        <administration>
            <domain_id>128</domain_id>
        </administration>
        <domain_route name="FileBridge">

            <connection name="FileConnectionInput" plugin_name="AdapterLib::FileAdapter">
                <property>
                    <value>
                        <element>
                            <name>example.adapter.folder_path</name>
                            <value>$(INPUT_DIRECTORY)</value>
                        </element>
                        <element>
                            <name>example.adapter.discovery_sleep_period</name>
                            <value>5</value>
                        </element>
                        <element>
                            <name>example.adapter.Direction</name>
                            <value>Input</value>
                        </element>
                    </value>
                </property>
            </connection>
                <connection name="FileConnectionOutput" plugin_name="AdapterLib::FileAdapter">
                    <property>
                        <value>
                            <element>
                                <name>example.adapter.folder_path</name>
                                <value>$(OUTPUT_DIRECTORY)</value>
                            </element>
                            <element>
                                <name>example.adapter.Direction</name>
                                <value>Output</value>
                            </element>
                        </value>
                    </property>
            </connection>


            <session name="session">
                <auto_route>
                    <input connection="FileConnectionInput">
                        <creation_mode>ON_DOMAIN_MATCH</creation_mode>
                        <property>
                            <value>
                                <!-- If we dont provide an input file, by default it
                                    will open every file in the discovery directory-->
                                <element>
                                    <name>example.adapter.sample_period_sec</name>
                                    <value>1</value>
                                </element>
                                <element>
                                    <name>example.adapter.samples_per_read</name>
                                    <value>2</value>
                                </element>
                            </value>
                        </property>
                    </input>
                    <output connection="FileConnectionOutput">
                        <creation_mode>ON_ROUTE_MATCH</creation_mode>
                        <property>
                            <value>
                                <element>
                                    <name>example.adapter.output_file</name>
                                    <value>output.csv</value>
                                </element>
                                <element>
                                    <name>example.adapter.sample_period_sec</name>
                                    <value>1</value>
                                </element>
                            </value>
                        </property>
                    </output>
                </auto_route>
            </session>
        </domain_route>
    </routing_service>
</dds>
